security:

    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords

    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        sonata_user_bundle:
            id: sonata.user.security.user_provider

    role_hierarchy:
        ROLE_ADMIN: [ ROLE_USER, ROLE_SONATA_ADMIN ]
        ROLE_SUPER_ADMIN: [ ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH ]
        SONATA:
            - ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT

    encoders:
        Symfony\Component\Security\Core\User\UserInterface: auto

    firewalls:

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        admin:
            lazy: true
            pattern: /admin(.*)
            provider: sonata_user_bundle
            context: user
            form_login:
                login_path: sonata_user_admin_security_login
                check_path: sonata_user_admin_security_check
                default_target_path: sonata_admin_dashboard
            logout:
                path: sonata_user_admin_security_logout
                target: sonata_user_admin_security_login
            remember_me:
                secret: '%env(APP_SECRET)%'
                lifetime: 2629746
                path: /admin

        main:
            lazy: true
            http_basic: true
            provider: sonata_user_bundle

    access_control:
#        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/admin/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/admin/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/admin/, role: [ROLE_ADMIN, ROLE_SONATA_ADMIN] }
#        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
